Problem statement:->>>
Given an array of length N and an integer x, you need to find and return the last index of integer x present in the array. Return -1 if it is not present in the array.

Last index means - if x is present multiple times in the array, return the index at which x comes last in the array.

You should start traversing your array from 0, not from (N - 1).

Do this recursively. Indexing in the array starts from 0.

Detailed explanation ( Input/output format, Notes, Images )
Constraints :
1 <= N <= 10^3

Sample Input :
4
9 8 10 8
8
Sample Output :
3
>>>>>>>>>>>>
>>>>>
>>>>>
Solution;->>>>>

public class Solution {

	public static int lastIndex(int input[], int x) {
		return frist(input, x, 0);

	}

	private static int lastIndex = -1;

	private static int frist(int input[], int x, int start) {

		if (start == input.length - 1) {
			if (lastIndex != -1) {
				return lastIndex;
			}
			return -1;

		}
		if (input[start] == x) {

			lastIndex = start;

		}
		int ans = frist(input, x, start + 1);
		return ans;

	}
}
